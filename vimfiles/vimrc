" useful after acquiring file list using this command:      :r!find ./ -name "*<name>*" -type f
" delete .svn .o and .d files in filename list:             :<range>g/\.svn\|\.o$\|\.d$/d
" Convert to HTML. Replace chars to its html equivalent
" %s/#/\&num;/g
" %s/</\&lt;/g
" %s/>/\&gt;/g
"
" example of using sub-replace-special \= in substitute command
" This changes date wrote in %s format to __%c__ format
" '<,'>s/\(\<[A-Z_]\+_TIME_[A-Z_]\+\>\s*=\s*\)\(\d\+\)/\="".submatch(1)."__".strftime( "%c", submatch(2) ) . "__"/g
" %s/\(\<COMMAND[A-Z_]\+_TIME[A-Z_]*\>\s*=\s*\)\(\d\+\)/\="".submatch(1)."__".strftime( "%c", submatch(2) ) . "__"/g

" assoc vim session file type (vis) with vim
" C:\>assoc .vis=vimsession
" C:\>ftype vimsession=\"C:\Program Files (x86)\vim\vim74\gvim.exe\" -S \"%1\" \"%2\" \"%3\" \"%4\"

"================================================================================
" PATHOGEN
"================================================================================
" ni -Path $home\vimfiles\autoload -Type Directory
" $a = new-object System.Net.WebClient
" $a.DownloadFile('https://tpo.pe/pathogen.vim', '$home\vimfiles\autoload\pathogen.vim')
" Remove-Variable a
"================================================================================

" ===============================
" Options
" ===============================

set nocompatible
" source $VIMRUNTIME/vimrc_example.vim
" source $VIMRUNTIME/mswin.vim
" behave mswin

" Отключить backup-ы
set nobackup
set nowritebackup

syntax enable
filetype plugin on
colorscheme torte

" из ru.wikibooks.org/wiki/vim#.7E.2F.vimrc
" всегда делать активное окно максимального рзамера 
" Чтобы сплиты не делили размер окна поровну всегда
set noequalalways

" обновления чаще
set updatetime=500

" чтобы vim добавлял перевод строки для длинных строк
set textwidth=130
" Не переносить длинные строки
set nowrap

" Отобразить строку состояния
set laststatus=2
" Формат строки состояния
"set statusline=\ %f%m%r%h%w%=\|\ %{&ff}\ \|\ %04l,%04v\ \|\ %L\ \|\ %P\ 
set statusline=\ %y\ %F%m%r%h%w%=\|%{&fenc}\|%{&ff}\|0x%B\|%04o\ %04l/%L,%04v\ 


" habrahabr.ru/post/65518
" установить размер табуляции в 2 пробела 
set tabstop=2
set softtabstop=2
set shiftwidth=2
"set smarttab
" replace tab with spaces
set expandtab

" Включить автоотступ для новых строк
set autoindent
" Включаем "умные" отступы и отступы в стиле "C" - нафик
"set smartindent
"set cindent
" Показывать положение курсора все время
set ruler
" Подсвечивать найденное; Поиск при наборе текста
set hlsearch incsearch
" allow to use backspace instead of "x"
set backspace=indent,eol,start
" показывать незавершённые комбинации в нижней строке
set showcmd

" Encoding opts
set encoding=utf-8
set fileencoding=utf-8
set fencs=utf-8,ucs-bom,cp1251,koi8-r
set ff=unix

" Исключить эти шаблоны для, например, vimgrep
set wildignore=*.o,*.swp,*.obj,*/node_modules/*,*/static/*

" ctags --c++-kinds=+p --fields=+iaS --extra=+q --language-force=C++

if has('gui_running')
    if has('win32')
        " maximize window
        " autocmd GUIEnter * simalt ~x
        " autocmd GUIEnter * call libcallnr('maximize', 'Maximize', 1)
        set lines=35 columns=140
        set guioptions-=T " don't show toolbar
        set guioptions-=m " don't show menu
        " установить шрифт
        set guifont=MesloLGSDZ_Nerd_Font_Mono:h14:cRUSSIAN,Anonymous_Pro:h14:cRUSSIAN,Courier_New:h12:cRUSSIAN

    elseif has('gui_gtk2')
        " maximize window
        " au GUIEnter * :set lines=9999 columns=9999
    endif
endif

source <sfile>:h/my_grep.vim
" source <sfile>:h/prj_spec.vim

" ===============================
" CoC configuration
" ===============================
source <sfile>:h/plugin_coc.vim

" ===============================
" NERDTree configuration
" ===============================
source <sfile>:h/plugin_nerdtree.vim

" ===============================
" Commands
" ===============================
command -nargs=0 ShowSvnDiff tabnew | set ft=diff | r!svn diff
command -nargs=0 ShowGitDiff tabnew | set ft=diff | r!git diff
command -nargs=1 T tabnext <args>

" function! CurPatchFile()
"     let nr = search( "^Index:\\s\\+\\S", "bncW" )
"     if l:nr != 0 
"         execute l:nr.",".l:nr."p"
"     else
"         echo "not found"
"     endif
" endfunction
" 
" map! [X :call CurPatchFile()<CR>

execute pathogen#infect()

